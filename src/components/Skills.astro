---
// Importaciones (si las necesitas)
---

<section id="skills" class="section">
  <div class="container">
    <h2>Habilidades Técnicas</h2>

    <!-- Categoría: Gestión IT -->
    <div class="skill-card">
      <div class="card-header">
        <h3>Gestión IT</h3>
        <button class="toggle-button">Ver más</button>
      </div>
      <div class="card-details">
        <ul>
          <li><strong>ITIL:</strong> Implementación de mejores prácticas.</li>
          <li><strong>ITSM:</strong> Gestión de servicios con herramientas como BMC Remedy y Servicenow.</li>
          <li><strong>Documentación:</strong> Uso de Confluence y Jira para gestionar proyectos.</li>
        </ul>
      </div>
    </div>

    <!-- Repite para otras categorías... -->
  </div>
</section>

<script>
  // Esperar a que el DOM esté completamente cargado
  document.addEventListener('DOMContentLoaded', () => {
    // Seleccionar todos los botones "Ver más"
    const buttons = document.querySelectorAll('.toggle-button');

    // Agregar un evento a cada botón
    buttons.forEach(button => {
      button.addEventListener('click', () => toggleDetails(button));
    });
  });

  // Función para expandir/cerrar detalles con botón
  function toggleDetails(button: Element) {
    // Asegúrate de que el botón es un elemento HTML válido
    if (!(button instanceof HTMLElement)) {
      console.error("El parámetro 'button' no es un elemento HTML válido.");
      return;
    }

    // Encuentra la tarjeta padre
    const card = button.closest('.skill-card');
    if (!card || !(card instanceof HTMLElement)) {
      console.error("No se encontró la tarjeta padre (.skill-card).");
      return;
    }

    // Encuentra los detalles dentro de la tarjeta
    const details = card.querySelector('.card-details');
    if (!details || !(details instanceof HTMLElement)) {
      console.error("No se encontraron los detalles (.card-details) dentro de la tarjeta.");
      return;
    }

    // Alterna entre mostrar y ocultar los detalles
    if (details.style.display === 'block') {
      details.style.display = 'none'; // Oculta los detalles
      button.textContent = 'Ver más'; // Cambia el texto del botón
    } else {
      details.style.display = 'block'; // Muestra los detalles
      button.textContent = 'Ocultar'; // Cambia el texto del botón
    }
  }
</script>

<style>
/* Estilos generales */
.section {
  padding: 4rem 0;
}

.container {
  max-width: 1100px;
  margin: 0 auto;
  padding: 0 1rem;
}

.skill-card {
  margin-bottom: 2rem;
  border: 1px solid var(--complementary-color);
  border-radius: 10px;
  overflow: hidden;
}

.card-header {
  display: flex;
  justify-content: space-between;
  align-items: center;
  background: var(--secondary-color);
  color: var(--neutral-color);
  padding: 1rem;
  cursor: pointer;
}

.card-header h3 {
  margin: 0;
}

.toggle-button {
  background: var(--accent-color);
  color: var(--neutral-color);
  border: none;
  padding: 0.5rem 1rem;
  border-radius: 5px;
  cursor: pointer;
  transition: background 0.3s ease;
}

.toggle-button:hover {
  background: var(--primary-color);
}

.card-details {
  display: none; /* Oculto por defecto */
  padding: 1rem;
  background: var(--light-bg-color);
}

.card-details ul {
  list-style: disc;
  margin-left: 1.5rem;
}
</style>